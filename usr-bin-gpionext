# set case insensitive
shopt -s nocasematch

set_flag(){
	sudo cp /lib/systemd/system/gpionext.service /tmp/gpionext.tmp
	sudo sed -i -e "$1" /tmp/gpionext.tmp
	sudo cp /tmp/gpionext.tmp /lib/systemd/system/gpionext.service
	# reload daemon and restart
	echo "Restarting GPIOnext"
	sudo systemctl stop gpionext
	sudo systemctl daemon-reload
	sudo systemctl start gpionext
}

case "$1" in

"STOP")
sudo stop systemctl gpionext
;;

"START")
sudo systemctl enable gpionext
sudo systemctl start gpionext
;;

"CONFIG")
sudo python3 $CONFIG_PATH
;;

"DISABLE")
sudo systemctl disable gpionext
;;

"JOURNAL")
if ! [[ $(grep "\-\-dev" /lib/systemd/system/gpionext.service) ]]; then
	echo "use 'gpionext set dev true' before running this command to get more information"
fi
echo "Press Ctrl+C to exit"
sudo journalctl -u gpionext -f
;;

"SET")
	wholeNumber='^[0-9]+$'
	case "$2" in
		"COMBO_DELAY")
			if [[ $3 =~ $wholeNumber ]] ; then
				set_flag 's/--combo_delay [0-9]*/--combo_delay '$3'/g'
			else
				echo "You must supply a valid whole number for $2"
			fi
			;;
		"PINS")
			case "$3" in
				"DEFAULT")
					echo "default"
					set_flag 's/[ ]*--pins [0-9/,]*//g'
					;;
				[0-9/,]*)
					echo "setting pins"
					set_flag 's/[ ]*--pins [0-9/,]*//g;s/^ExecStart=.*/& --pins '$3'/g'
					;;
				*)
					echo "You must supply comma separated pin numbers [ex. set pins 3,5,7,11] or default";;
			esac
			;;
		"DEBOUNCE")
			if [[ $3 =~ $wholeNumber ]] ; then
				set_flag 's/--debounce [0-9]*/--debounce '$3'/g'
			else
				echo "You must supply a valid whole number for $2"
			fi
			;;
		"PULLDOWN")
			case "$3" in
				"TRUE")
					if ! [[ $(grep "\-\-pulldown" /lib/systemd/system/gpionext.service) ]]; then
						set_flag 's/^ExecStart=.*/& --pulldown/'
					fi;;
				"FALSE")
					set_flag 's/[ ]*--pulldown//g'
					;;
				*)
					echo "You must supply true or false for $2 option";;
			esac
			;;
		"DEV")
			case "$3" in
				"TRUE")
					if ! [[ $(grep "\-\-dev" /lib/systemd/system/gpionext.service) ]]; then
						set_flag 's/^ExecStart=.*/& --dev/'
					fi;;
				"FALSE")
					set_flag 's/[ ]*--dev//g'
					;;
				*)
					echo "You must supply true or false for $2 option";;
			esac
			;;
		"DEBUG")
			case "$3" in
				"TRUE")
					if ! [[ $(grep "\-\-debug" /lib/systemd/system/gpionext.service) ]]; then
						set_flag 's/^ExecStart=.*/& --debug/'
					fi;;
				"FALSE")
					set_flag 's/[ ]*--debug//g'
					;;
				*)
					echo "You must supply true or false for $2 option";;
			esac
			;;
		*)
			echo "Unrecognized Parameter: ${2}"
			;;
	esac
	
;;

*)
if ! [[ "$1" == "HELP" ]]; then
	echo "Unrecognized Parameter: $1"
fi
echo "You can control the GPIOnext daemon using the following commands: 

- gpionext start		-> Start daemon						
- gpionext stop		-> Stop daemon until reboot or gpionext start is called						
- gpionext config	-> Run gpionext config						
- gpionext disable	-> Stop daemon/Disable auto-start on boot (type gpionext start to re-enable auto-start)						
- gpionext journal	-> Display any system output 
-------------------------------------------------------------------------------------------------------------------------------
- gpionext set combo_delay [milliseconds]	-> Delay in milliseconds to wait for additional buttons to be pressed for combos						
- gpionext set debounce [milliseconds]		-> Delay in milliseconds to wait to avoid multiple accidental presses					
- gpionext set pins [default | pin numbers]	-> default = all available pins or comma separated pin numbers (ex. 3,5,7,11,40)					
- gpionext set pulldown [true | false]			-> set pins to use pulldown resistors instead of pull up (excludes pins 3 + 5)		
- gpionext set dev [true | false]					-> output information to console while program in use (use 'gpionext journal' to view)
- gpionext set debug [true | false]				-> output information to gpionext/logFile.txt

						"

;;
esac
# set case match back to default
shopt -u nocasematch
